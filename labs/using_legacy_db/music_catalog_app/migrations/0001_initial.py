# Generated by Django 2.2 on 2019-05-06 22:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('about', models.TextField(blank=True, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=100, null=True)),
                ('is_fav', models.IntegerField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'album',
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('about', models.TextField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('is_fav', models.IntegerField(blank=True, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'artist',
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genre',
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('is_fav', models.IntegerField(blank=True, null=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='music_catalog_app.Album')),
            ],
            options={
                'db_table': 'track',
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrackArtist',
            fields=[
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='music_catalog_app.Track')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='music_catalog_app.Artist')),
            ],
            options={
                'db_table': 'track_artist',
                'managed': True,
                'unique_together': {('track', 'artist')},
            },
        ),
        migrations.CreateModel(
            name='AlbumGenre',
            fields=[
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='music_catalog_app.Album')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='music_catalog_app.Genre')),
            ],
            options={
                'db_table': 'album_genre',
                'managed': True,
                'unique_together': {('album', 'genre')},
            },
        ),
        migrations.CreateModel(
            name='AlbumArtist',
            fields=[
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='music_catalog_app.Album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='music_catalog_app.Artist')),
            ],
            options={
                'db_table': 'album_artist',
                'managed': True,
                'unique_together': {('album', 'artist')},
            },
        ),
    ]
